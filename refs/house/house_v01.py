# freecad-python generated by Parametrix
# run the script with:
# freecad.cmd myScript.py

import FreeCAD as App
import Part

#print(sys.argv)
outFileName = "house"
if (len(sys.argv) == 3):
    outFileName = sys.argv[2]
print(f"outFileName: {outFileName}")

def ctr_face_house_facePA_Fa0_Ctr0():
	P000 = App.Vector(-500.0000, 0.0000, 0)
	P001 = App.Vector(500.0000, 0.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(500.0000, 400.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(0.0000, 1600.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(-500.0000, 400.0000, 0)
	S003 = Part.LineSegment(P003, P004)
	P005 = App.Vector(-500.0000, 0.0000, 0)
	S004 = Part.LineSegment(P004, P000)
	aShape = Part.Shape([S000, S001, S002, S003, S004])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_house_facePA_Fa0():
	FC000 = ctr_face_house_facePA_Fa0_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def house_facePA():
	FA000 = face_house_facePA_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def ctr_face_house_facePB_Fa0_Ctr0():
	P000 = App.Vector(-400.0000, 0.0000, 0)
	P001 = App.Vector(400.0000, 0.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(400.0000, 600.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(0.0000, 1700.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(-400.0000, 600.0000, 0)
	S003 = Part.LineSegment(P003, P004)
	P005 = App.Vector(-400.0000, 0.0000, 0)
	S004 = Part.LineSegment(P004, P000)
	aShape = Part.Shape([S000, S001, S002, S003, S004])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_house_facePB_Fa0():
	FC000 = ctr_face_house_facePB_Fa0_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def house_facePB():
	FA000 = face_house_facePB_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def ctr_face_house_facePC_Fa0_Ctr0():
	P000 = App.Vector(-400.0000, 0.0000, 0)
	P001 = App.Vector(400.0000, 0.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(400.0000, 700.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(0.0000, 1300.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(-400.0000, 700.0000, 0)
	S003 = Part.LineSegment(P003, P004)
	P005 = App.Vector(-400.0000, 0.0000, 0)
	S004 = Part.LineSegment(P004, P000)
	aShape = Part.Shape([S000, S001, S002, S003, S004])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_house_facePC_Fa0():
	FC000 = ctr_face_house_facePC_Fa0_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def house_facePC():
	FA000 = face_house_facePC_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def ctr_face_house_facePD_Fa0_Ctr0():
	P000 = App.Vector(-250.0000, 0.0000, 0)
	P001 = App.Vector(250.0000, 0.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(250.0000, 700.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(0.0000, 1300.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(-250.0000, 700.0000, 0)
	S003 = Part.LineSegment(P003, P004)
	P005 = App.Vector(-250.0000, 0.0000, 0)
	S004 = Part.LineSegment(P004, P000)
	aShape = Part.Shape([S000, S001, S002, S003, S004])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_house_facePD_Fa0():
	FC000 = ctr_face_house_facePD_Fa0_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def house_facePD():
	FA000 = face_house_facePD_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def ctr_face_house_facePE_Fa0_Ctr0():
	P000 = App.Vector(-200.0000, 0.0000, 0)
	P001 = App.Vector(200.0000, 0.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(200.0000, 1000.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(0.0000, 1600.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(-200.0000, 1000.0000, 0)
	S003 = Part.LineSegment(P003, P004)
	P005 = App.Vector(-200.0000, 0.0000, 0)
	S004 = Part.LineSegment(P004, P000)
	aShape = Part.Shape([S000, S001, S002, S003, S004])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_house_facePE_Fa0():
	FC000 = ctr_face_house_facePE_Fa0_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def house_facePE():
	FA000 = face_house_facePE_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def ctr_face_house_faceTerrasse_Fa0_Ctr0():
	P000 = App.Vector(-2400.0000, -250.0000, 0)
	P001 = App.Vector(-2400.0000, 250.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(-2600.0000, 250.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(-2600.0000, -250.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(-2400.0000, -250.0000, 0)
	S003 = Part.LineSegment(P003, P000)
	aShape = Part.Shape([S000, S001, S002, S003])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_house_faceTerrasse_Fa0():
	FC000 = ctr_face_house_faceTerrasse_Fa0_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def ctr_face_house_faceTerrasse_Fa1_Ctr0():
	P000 = App.Vector(-400.0000, -500.0000, 0)
	P001 = App.Vector(-1900.0000, -500.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(-1900.0000, -800.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(-400.0000, -800.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(-400.0000, -500.0000, 0)
	S003 = Part.LineSegment(P003, P000)
	aShape = Part.Shape([S000, S001, S002, S003])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_house_faceTerrasse_Fa1():
	FC000 = ctr_face_house_faceTerrasse_Fa1_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def house_faceTerrasse():
	FA000 = face_house_faceTerrasse_Fa0()
	FA001 = face_house_faceTerrasse_Fa1()
	rOneFig = FA000.fuse([FA001])
	rOneFig.check()
	return rOneFig

def fex_subpax_house_pAw():
	FIG = house_facePA()
	VEX = FIG.extrude(App.Vector(0, 0, 2400))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 270.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_house_pAw = fex_subpax_house_pAw()

def fex_subpax_house_pAe():
	FIG = house_facePA()
	VEX = FIG.extrude(App.Vector(0, 0, 600))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 90.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_house_pAe = fex_subpax_house_pAe()

def fex_subpax_house_pBn():
	FIG = house_facePB()
	VEX = FIG.extrude(App.Vector(0, 0, 900))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 180.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_house_pBn = fex_subpax_house_pBn()

def fex_subpax_house_pBs():
	FIG = house_facePB()
	VEX = FIG.extrude(App.Vector(0, 0, 1400))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_house_pBs = fex_subpax_house_pBs()

def fex_subpax_house_pCn():
	FIG = house_facePC()
	VEX = FIG.extrude(App.Vector(0, 0, 700))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 180.0000)
	VFP = VR3.translate(App.Vector(-800.0000, 0.0000, 0.0000))
	return VFP
subpax_house_pCn = fex_subpax_house_pCn()

def fex_subpax_house_pD1s():
	FIG = house_facePD()
	VEX = FIG.extrude(App.Vector(0, 0, 500))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(-1550.0000, 0.0000, 0.0000))
	return VFP
subpax_house_pD1s = fex_subpax_house_pD1s()

def fex_subpax_house_pD2e():
	FIG = house_facePD()
	VEX = FIG.extrude(App.Vector(0, 0, 400))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 90.0000)
	VFP = VR3.translate(App.Vector(0.0000, -1050.0000, 0.0000))
	return VFP
subpax_house_pD2e = fex_subpax_house_pD2e()

def fex_subpax_house_pE1s():
	FIG = house_facePE()
	VEX = FIG.extrude(App.Vector(0, 0, 400))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(-600.0000, 0.0000, 0.0000))
	return VFP
subpax_house_pE1s = fex_subpax_house_pE1s()

def fex_subpax_house_pE2w():
	FIG = house_facePE()
	VEX = FIG.extrude(App.Vector(0, 0, 300))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 270.0000)
	VFP = VR3.translate(App.Vector(0.0000, -600.0000, 0.0000))
	return VFP
subpax_house_pE2w = fex_subpax_house_pE2w()

def fex_subpax_house_terras():
	FIG = house_faceTerrasse()
	VEX = FIG.extrude(App.Vector(0, 0, 400))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 0.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_house_terras = fex_subpax_house_terras()

def fvol_pax_house():
	V000 = subpax_house_pAw
	V001 = V000.fuse(subpax_house_pAe)
	V002 = V001.fuse(subpax_house_pBn)
	V003 = V002.fuse(subpax_house_pBs)
	V004 = V003.fuse(subpax_house_pCn)
	V005 = V004.fuse(subpax_house_pD1s)
	V006 = V005.fuse(subpax_house_pD2e)
	V007 = V006.fuse(subpax_house_pE1s)
	V008 = V007.fuse(subpax_house_pE2w)
	V009 = V008.fuse(subpax_house_terras)
	VFC = V009.removeSplitter()
	return VFC
pax_house = fvol_pax_house()


pax_house.check()
#pax_house.exportBrep(f"{outFileName}.brep")
#pax_house.exportIges(f"{outFileName}.igs")
#pax_house.exportStep(f"{outFileName}.stp")
pax_house.exportStl(f"{outFileName}.stl")

