# freecad-python generated by Parametrix
# run the script with:
# freecad.cmd myScript.py

import FreeCAD as App
import Part

#print(sys.argv)
outFileName = "singleBone"
if (len(sys.argv) == 3):
    outFileName = sys.argv[2]
print(f"outFileName: {outFileName}")

def ctr_face_singleBone_faceBone_Fa0_Ctr0():
	P000 = App.Vector(22.5533, 26.7647, 0)
	P001 = App.Vector(-35.0000, 0.0000, 0)
	P002 = App.Vector(22.5533, -26.7647, 0)
	S000 = Part.Arc(P000, P001, P002)
	P003 = App.Vector(37.6224, -18.0332, 0)
	P004 = App.Vector(54.7723, -15.0000, 0)
	S001 = Part.Arc(P002, P003, P004)
	P005 = App.Vector(145.2277, -15.0000, 0)
	S002 = Part.LineSegment(P004, P005)
	P006 = App.Vector(162.3776, -18.0332, 0)
	P007 = App.Vector(177.4467, -26.7647, 0)
	S003 = Part.Arc(P005, P006, P007)
	P008 = App.Vector(235.0000, -0.0000, 0)
	P009 = App.Vector(177.4467, 26.7647, 0)
	S004 = Part.Arc(P007, P008, P009)
	P010 = App.Vector(162.3776, 18.0332, 0)
	P011 = App.Vector(145.2277, 15.0000, 0)
	S005 = Part.Arc(P009, P010, P011)
	P012 = App.Vector(54.7723, 15.0000, 0)
	S006 = Part.LineSegment(P011, P012)
	P013 = App.Vector(37.6224, 18.0332, 0)
	P014 = App.Vector(22.5533, 26.7647, 0)
	S007 = Part.Arc(P012, P013, P000)
	aShape = Part.Shape([S000, S001, S002, S003, S004, S005, S006, S007])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def ctr_face_singleBone_faceBone_Fa0_Ctr1():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(15.0000, App.Vector(0.0000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_singleBone_faceBone_Fa0_Ctr2():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(15.0000, App.Vector(200.0000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_singleBone_faceBone_Fa0_Ctr3():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(7.5000, App.Vector(56.5000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_singleBone_faceBone_Fa0_Ctr4():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(7.5000, App.Vector(85.5000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_singleBone_faceBone_Fa0_Ctr5():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(7.5000, App.Vector(114.5000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_singleBone_faceBone_Fa0_Ctr6():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(7.5000, App.Vector(143.5000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def face_singleBone_faceBone_Fa0():
	FC000 = ctr_face_singleBone_faceBone_Fa0_Ctr0()
	FC001 = ctr_face_singleBone_faceBone_Fa0_Ctr1()
	FC002 = ctr_face_singleBone_faceBone_Fa0_Ctr2()
	FC003 = ctr_face_singleBone_faceBone_Fa0_Ctr3()
	FC004 = ctr_face_singleBone_faceBone_Fa0_Ctr4()
	FC005 = ctr_face_singleBone_faceBone_Fa0_Ctr5()
	FC006 = ctr_face_singleBone_faceBone_Fa0_Ctr6()
	rOneFace = FC000.cut([FC001, FC002, FC003, FC004, FC005, FC006])
	rOneFace.check()
	return rOneFace

def singleBone_faceBone():
	FA000 = face_singleBone_faceBone_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def fex_subpax_singleBone_bone():
	FIG = singleBone_faceBone()
	VEX = FIG.extrude(App.Vector(0, 0, 10))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 0.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_singleBone_bone = fex_subpax_singleBone_bone()

pax_singleBone = subpax_singleBone_bone

pax_singleBone.check()
#pax_singleBone.exportBrep(f"{outFileName}.brep")
#pax_singleBone.exportIges(f"{outFileName}.igs")
#pax_singleBone.exportStep(f"{outFileName}.stp")
pax_singleBone.exportStl(f"{outFileName}.stl")

